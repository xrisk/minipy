int32[8] arr = {8, 7, 6, 5, 1, 2, 3, 4}
int32[8] output

def getMax(int32[1024] arr, int32 n) -> int32:
    int32 max = arr[0]
    for (int32 i = 1; i < n; i = i + 1):
        if arr[i] > max:
            max = arr[i]
    return max


def countSort(int32 n, int32 exp) -> None:
    int32 i
    int32[10] count
    int32 idx

    for (i = 0; i < n; i = i + 1):
        idx = (i / 10) % 10
        count[idx] = count[idx] + 1

    for (i = 1; i < 10; i = i + 1):
        count[i] = count[i] + count[i - 1]

    for (i = n - 1; i >= 0; i = i - 1):
        idx = (arr[i] / exp) % 10
        output[count[idx - 1]] = arr[i]
        count[idx] = count[idx] - 1

    for (i = 0; i < n; i = i + 1):
        arr[i] = output[i]

def radixSort(int32 n) -> None:
    int32 m = getMax(arr, n)
    for (int32 exp = 1; m / exp > 0; exp = exp * 10):
        countSort(n, exp)

radixSort(8)
