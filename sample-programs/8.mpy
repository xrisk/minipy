int32[8] arr = {5, 4, 3, 2, 6, 7, 8, 9}

def merge(int32 l, int32 m, int32 r) -> None:
    int32 i
    int32 j
    int32 k
    int32 n1 = m - l + 1
    int32 n2 = r - m

    int32[n1] L
    int32[n2] R

    for (i = 0; i < n1; i = i + 1):
        L[i] = arr[l + i]

    for (j = 0; j < n2; j = j + 1):
        R[j] = arr[m + 1 + j]

    i = 0
    j = 0
    k = 0

    while i < n1 and j < n2:
        if L[i] <= R[j]:
            arr[k] = L[i]
            i = i + 1
        else:
            arr[k] = R[j]
            j = j + 1
        k = k + 1

    while i < n1:
        arr[k] = L[i]
        i = i + 1
        k = k + 1

    while j < n2:
        arr[k] = R[j]
        j = j + 1
        k = k + 1

def mergeSort(int32 l, int32 r) -> None:
    if l < r:
        int32 m = l + (r - 1) / 2
        mergeSort(l, m)
        mergeSort(m + 1, r)
        merge(l, m, r)

